{"version":3,"sources":["ToDoItems.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","props","text","Fragment","className","aria-hidden","onClick","onSelect","id","key","App","useState","getItem","setItem","itemList","updateItemList","deleteItem","oldList","filter","element","index","type","placeholder","value","onChange","event","target","console","log","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAuBeA,EArBE,SAACC,GAChB,MAAmB,KAAfA,EAAMC,KAEN,cAAC,IAAMC,SAAP,UACE,sBAAKC,UAAU,UAAf,UACE,mBACEA,UAAU,cACVC,cAAY,OACZC,QAAS,WACPL,EAAMM,SAASN,EAAMO,OAGzB,oBAAIA,GAAIP,EAAMO,GAAd,SACGP,EAAMC,MADcD,EAAMQ,UAMvB,I,MC+CDC,MA/Df,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNC,EADM,KACGC,EADH,OAOsBF,mBAAS,IAP/B,mBAONG,EAPM,KAOIC,EAPJ,KAePC,EAAa,SAACR,GAClBO,GAAe,SAACE,GACd,OAAOA,EAAQC,QAAO,SAACC,EAASC,GAC9B,OAAOA,GAASZ,SAKtB,OACE,cAAC,IAAML,SAAP,UACE,qBAAKK,GAAG,UAAR,SACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,6CAEF,sBAAKA,UAAU,YAAf,UACE,uBACEiB,KAAK,OACLC,YAAY,WACZC,MAAOX,EACPY,SAlCM,SAACC,GACnBZ,EAAQY,EAAMC,OAAOH,OACrBI,QAAQC,IAAIH,EAAMC,OAAOH,UAmCf,uBAAOF,KAAK,SAASE,MAAM,IAAIjB,QA/BzB,WAChBS,GAAe,SAACE,GACd,MAAM,GAAN,mBAAWA,GAAX,CAAoBL,OAEtBC,EAAQ,aA8BF,qBAAKT,UAAU,WAAf,SACE,oBAAIA,UAAU,YAAd,SACGU,EAASe,KAAI,SAACN,EAAOH,GACpB,OACE,cAAC,EAAD,CACEhB,UAAU,aACVI,GAAIY,EAEJlB,KAAMqB,EACNhB,SAAUS,GAFLI,kBCzCVU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.474259c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDoItem = (props) => {\r\n  if (props.text !== \"\") {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"li-item\">\r\n          <i\r\n            className=\"fa fa-times\"\r\n            aria-hidden=\"true\"\r\n            onClick={() => {\r\n              props.onSelect(props.id);\r\n            }}\r\n          ></i>\r\n          <li id={props.id} key={props.key}>\r\n            {props.text}\r\n          </li>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else return \"\";\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItems\";\nimport \"./App.css\";\n\nfunction App() {\n  const [getItem, setItem] = useState(\"\");\n  const itemChanged = (event) => {\n    setItem(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const [itemList, updateItemList] = useState([]);\n  const addToList = () => {\n    updateItemList((oldList) => {\n      return [...oldList, getItem];\n    });\n    setItem(\"\");\n  };\n\n  const deleteItem = (id) => {\n    updateItemList((oldList) => {\n      return oldList.filter((element, index) => {\n        return index != id;\n      });\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div id=\"ToDoApp\">\n        <div className=\"ToDoContent\">\n          <dib className=\"fixed-top\">\n            <div className=\"heading\">\n              <h1>ToDo List</h1>\n            </div>\n            <div className=\"inputArea\">\n              <input\n                type=\"text\"\n                placeholder=\"Add Item\"\n                value={getItem}\n                onChange={itemChanged}\n              />\n\n              <input type=\"submit\" value=\"+\" onClick={addToList} />\n            </div>\n          </dib>\n          <div className=\"ToDoList\">\n            <ol className=\"ToDoItems\">\n              {itemList.map((value, index) => {\n                return (\n                  <ToDoItem\n                    className=\"to-do-item\"\n                    id={index}\n                    key={index}\n                    text={value}\n                    onSelect={deleteItem}\n                  />\n                );\n              })}\n            </ol>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}